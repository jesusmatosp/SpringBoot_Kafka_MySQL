version: "3.8"

services:
  mysqldb:
    hostname: mysqldb
    container_name: mysqldb
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    networks:
      - some-net
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - some-net
  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - some-net
  process-batch:
    hostname: process-batch
    container_name: process-batch
    depends_on:
      - mysqldb
      - zoo1
    build: ./BatchProcess
    restart: on-failure
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    environment:
      APP_SERVER: mysqldb
      APP_PORT: 3306
    networks:
      - some-net
  microservices-01:
    hostname: microservices-01
    container_name: microservices-01
    depends_on:
      - process-batch
      - zoo1
    build: ./Microservice01
    restart: on-failure
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    networks:
      - some-net
  microservices-02:
    hostname: microservices-02
    container_name: microservices-02
    depends_on:
      - microservices-01
      - zoo1
    build: ./Microservice02
    restart: on-failure
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    networks:
      - some-net
  app-web:
    hostname: app-web
    container_name: app-web
    build: ./Angular13Web
    restart: on-failure
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true   
    networks:
      - some-net 
  microservices-03:
    hostname: microservices-03
    container_name: microservices-03
    depends_on:
      - mysqldb
    build: ./Microservice03
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    networks:
      - some-net
volumes:
  db:
networks:
  some-net:
    driver: bridge